---
import { sanityClient } from "sanity:client";
import BaseLayout from "@/layouts/Base.astro";
import { imageUrlBuilder } from "@/lib/sanity";

type IPost = {
  title: string;
  slug: string;
  description: string;
  mainImageUrl: string;
  author: {
    name: string;
    imageUrl: string;
  };
  _updatedAt: string;
  _createdAt: string;
  estimatedReadingTime: number;
};

const posts: IPost[] = await sanityClient.fetch(
  `*[_type == "post" && defined(slug)] | order(publishedAt desc)
  {
    _id, 
    title, 
    "slug": slug.current,
    description,
    "mainImageUrl": mainImage.asset->url,
    author->{
      name,
      "imageUrl": image.asset->url
    },
    "estimatedReadingTime": round(length(pt::text(body)) / 5 / 180 ),
    _updatedAt,
    _createdAt
  }`
);
---

<BaseLayout title="Posts" description="Posts page">

  <section class="bg-white dark:bg-gray-900">
    <div class="py-8 px-4 mx-auto max-w-screen-xl lg:py-16 lg:px-6">
      <div class="mx-auto max-w-screen-sm text-center lg:mb-16 mb-8">
        <h1
          class="mb-4 text-3xl lg:text-4xl tracking-tight font-extrabold text-gray-900 dark:text-white"
        >
          Posts
        </h1>
        <p class="font-light text-gray-500 sm:text-xl dark:text-gray-400">
          Unveiling Perspectives, Igniting Ideas.
        </p>
      </div>

      <div class="grid gap-8 sm:grid-cols-2 lg:grid-cols-3">
        {
          posts.map(
            ({
              slug,
              title,
              description,
              mainImageUrl,
              _createdAt,
              author,
              estimatedReadingTime,
            }) => {
              const date = new Date(_createdAt);
              const dateString = new Intl.DateTimeFormat("en-US", {
                dateStyle: "medium",
              }).format(date);

              return (
                <a
                  class="flex p-4 bg-white border border-gray-200 rounded-lg shadow-md hover:bg-gray-50"
                  href={`/posts/${slug}`}
                >
                  <article class=" flex flex-col items-start">
                    <div class="flex h-48 w-full mb-5 bg-white rounded-lg">
                      <img
                        class="w-full h-full object-cover mx-auto rounded-lg"
                        src={imageUrlBuilder(mainImageUrl)
                          .width(400)
                          .format("webp")
                          .url()}
                        alt="office laptop working"
                      />
                    </div>
                    <span class="mr-2 rounded bg-violet-100 px-2.5 py-0.5 text-xs font-semibold text-purple-800 w">
                      Article
                    </span>
                    <h2 class="py-2 text-2xl font-bold tracking-tight text-gray-900">
                      {title}
                    </h2>
                    <p class="mb-4 font-light text-gray-500 line-clamp-4">
                      {description}
                    </p>
                    <div class="flex items-center space-x-4 mt-auto">
                      <img
                        class="rounded-full w-10 h-10"
                        src={imageUrlBuilder(author.imageUrl)
                          .height(64)
                          .width(64)
                          .format("webp")
                          .url()}
                        alt={`${author.name} avatar`}
                        loading="lazy"
                      />
                      <div class="font-medium">
                        <div>{author.name}</div>
                        <div class="text-sm font-normal text-gray-500">
                          {dateString} &#x00B7; {estimatedReadingTime} min read
                        </div>
                      </div>
                    </div>
                  </article>
                </a>
              );
            }
          )
        }
      </div>
    </div>
  </section>
</BaseLayout>
